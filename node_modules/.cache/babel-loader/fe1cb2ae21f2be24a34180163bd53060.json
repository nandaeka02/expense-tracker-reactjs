{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nanda\\\\Documents\\\\Projekan\\\\Projek React\\\\belajarreact1\\\\src\\\\components\\\\AddTransaction\\\\AddTransaction.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddTransaction(props) {\n  _s();\n\n  let [getInputText, setInputText] = useState('');\n  let [getInputAmount, setInputAmount] = useState('');\n\n  const handleInputText = event => {\n    setInputText(event.target.value);\n  };\n\n  const handleInputAmount = event => {\n    setInputAmount(event.target.value);\n  };\n\n  const addNewTransaction = event => {\n    if (!(getInputAmount === '' && getInputText === '')) {\n      let isIncome = \"income\";\n\n      if (parseInt(getInputAmount) < 0) {\n        isIncome = \"outcome\";\n      }\n\n      const newTransaction = {\n        balance: getInputAmount,\n        type: isIncome,\n        description: getInputText\n      };\n      props.DataTransaction(newTransaction);\n      setInputText('');\n      setInputAmount('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addnewtransaction\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getInputText,\n      onChange: handleInputText,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"(negative -expense, positif +expense)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: getInputAmount,\n      onChange: handleInputAmount,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewTransaction,\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddTransaction, \"d62AGOg4aDyNFJ6EJM2fj1rho9Q=\");\n\n_c = AddTransaction;\nexport default AddTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"sources":["C:/Users/Nanda/Documents/Projekan/Projek React/belajarreact1/src/components/AddTransaction/AddTransaction.js"],"names":["useState","AddTransaction","props","getInputText","setInputText","getInputAmount","setInputAmount","handleInputText","event","target","value","handleInputAmount","addNewTransaction","isIncome","parseInt","newTransaction","balance","type","description","DataTransaction"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,MAAI,CAACC,YAAD,EAAeC,YAAf,IAA+BJ,QAAQ,CAAC,EAAD,CAA3C;AACA,MAAI,CAACK,cAAD,EAAiBC,cAAjB,IAAmCN,QAAQ,CAAC,EAAD,CAA/C;;AACA,QAAMO,eAAe,GAAIC,KAAD,IAAU;AAC9BJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAFD;;AAGA,QAAMC,iBAAiB,GAAIH,KAAD,IAAU;AAChCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACH,GAFD;;AAGA,QAAME,iBAAiB,GAAIJ,KAAD,IAAU;AAChC,QAAG,EAAEH,cAAc,KAAK,EAAnB,IAAyBF,YAAY,KAAK,EAA5C,CAAH,EAAmD;AAC/C,UAAIU,QAAQ,GAAG,QAAf;;AACA,UAAIC,QAAQ,CAACT,cAAD,CAAR,GAA2B,CAA/B,EAAkC;AAC9BQ,QAAAA,QAAQ,GAAG,SAAX;AACH;;AACD,YAAME,cAAc,GAAG;AACnBC,QAAAA,OAAO,EAAEX,cADU;AAEnBY,QAAAA,IAAI,EAAEJ,QAFa;AAGnBK,QAAAA,WAAW,EAAEf;AAHM,OAAvB;AAKAD,MAAAA,KAAK,CAACiB,eAAN,CAAsBJ,cAAtB;AACAX,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACH;AAEJ,GAhBD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,KAAK,EAAEH,YAAd;AAA4B,MAAA,QAAQ,EAAEI,eAAtC;AAAuD,MAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAO,MAAA,KAAK,EAAEF,cAAd;AAA8B,MAAA,QAAQ,EAAEM,iBAAxC;AAA2D,MAAA,IAAI,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAQ,MAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GArCQX,c;;KAAAA,c;AAuCT,eAAeA,cAAf","sourcesContent":["import { useState } from 'react';\r\nfunction AddTransaction(props) {\r\n    let [getInputText, setInputText] = useState('')\r\n    let [getInputAmount, setInputAmount] = useState('')\r\n    const handleInputText = (event) =>{\r\n        setInputText(event.target.value)\r\n    }\r\n    const handleInputAmount = (event) =>{\r\n        setInputAmount(event.target.value)\r\n    }\r\n    const addNewTransaction = (event) =>{\r\n        if(!(getInputAmount === '' && getInputText === '')){\r\n            let isIncome = \"income\"\r\n            if (parseInt(getInputAmount) < 0) {\r\n                isIncome = \"outcome\"\r\n            }\r\n            const newTransaction = {\r\n                balance: getInputAmount,\r\n                type: isIncome,\r\n                description: getInputText\r\n            }\r\n            props.DataTransaction(newTransaction)\r\n            setInputText('')\r\n            setInputAmount('')\r\n        }\r\n\r\n    }\r\n    return(\r\n        <div className='addnewtransaction'>\r\n            <h3>Add new transaction</h3>\r\n            <p>Text</p>\r\n            <input value={getInputText} onChange={handleInputText} type='text'/>\r\n            <p>Amount</p>\r\n            <p>(negative -expense, positif +expense)</p>\r\n            <input value={getInputAmount} onChange={handleInputAmount} type='text'/>\r\n            <button onClick={addNewTransaction}>Add Transaction</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTransaction"]},"metadata":{},"sourceType":"module"}