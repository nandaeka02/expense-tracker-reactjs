{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nanda\\\\Documents\\\\Projekan\\\\Projek React\\\\belajarreact1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport Second from './Second';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [getBalance, setBalance] = useState(0);\n  let [getHistory, setHistory] = useState([{\n    balance: \"+1000\",\n    type: \"income\",\n    description: \"Cek\"\n  }, {\n    balance: \"+1000\",\n    type: \"income\",\n    description: \"Cek\"\n  }, {\n    balance: \"+1000\",\n    type: \"income\",\n    description: \"Cek\"\n  }, {\n    balance: \"-1000\",\n    type: \"outcome\",\n    description: \"Cek\"\n  }, {\n    balance: \"-1000\",\n    type: \"outcome\",\n    description: \"Cek\"\n  }]);\n\n  const getOutcomeBalance = () => {\n    let outcomebalance = 0;\n    getHistory.forEach(history => {\n      if (history.type === \"outcome\") {\n        outcomebalance += history.balance;\n      }\n    });\n    return outcomebalance;\n  };\n\n  const getIncomeBalance = () => {\n    let incomebalance = 0;\n    getHistory.forEach(history => {\n      if (history.type === \"income\") {\n        incomebalance += parseInt(history.balance);\n      }\n    });\n    return incomebalance;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"IDR \", getIncomeBalance() - getOutcomeBalance()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outincontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"income\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"INCOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green-accent\",\n          children: [\"IDR \", getIncomeBalance()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outcome\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"OUTCOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-accent\",\n          children: [\"IDR \", getOutcomeBalance()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: getHistory.map(history => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"leftp\",\n              children: history.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rightp\",\n              children: history.balance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 26\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addnewtransaction\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add new transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lJnC5WbbTz+MGX224/xHS/Ue/1w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nanda/Documents/Projekan/Projek React/belajarreact1/src/App.js"],"names":["logo","useState","Second","App","getBalance","setBalance","getHistory","setHistory","balance","type","description","getOutcomeBalance","outcomebalance","forEach","history","getIncomeBalance","incomebalance","parseInt","map"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport Second from './Second';\n\nfunction App() {\n  let [getBalance, setBalance] = useState(0)\n  let [getHistory, setHistory] = useState([\n    {balance: \"+1000\", type: \"income\",description: \"Cek\"},\n    {balance: \"+1000\", type: \"income\",description: \"Cek\"},\n    {balance: \"+1000\", type: \"income\",description: \"Cek\"},\n    {balance: \"-1000\", type: \"outcome\",description: \"Cek\"},\n    {balance: \"-1000\", type: \"outcome\",description: \"Cek\"}\n  ])\n  \n  const getOutcomeBalance = () =>{\n    let outcomebalance = 0\n    getHistory.forEach((history) =>{\n      if(history.type === \"outcome\"){\n        outcomebalance += history.balance\n      }\n    }) \n    return outcomebalance\n  }\n  const getIncomeBalance = () =>{\n    let incomebalance = 0\n    getHistory.forEach((history) =>{\n      if(history.type === \"income\"){\n        incomebalance += parseInt(history.balance)\n      }\n    }) \n    return incomebalance\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Expense Tracker</h1>\n      <h3>Your Balance</h3>\n      <h2>IDR {getIncomeBalance() - getOutcomeBalance()}</h2>\n      <div className='outincontainer'>\n        <div className='income'>\n          <h4>INCOME</h4>\n          <span className='green-accent'>IDR {getIncomeBalance()}</span>\n        </div>\n        <div className='outcome'>\n          <h4>OUTCOME</h4>\n          <span className='red-accent'>IDR {getOutcomeBalance()}</span>\n        </div>\n      </div>\n      <div className='history'>\n        <h3>History</h3>\n        <ul>\n            {\n              getHistory.map((history)=>{\n                  return <li><p className='leftp'>{history.description}</p><p className='rightp'>{history.balance}</p></li>\n              })\n            }\n          \n        </ul>\n      </div>\n\n      <div className='addnewtransaction'>\n        <h3>Add new transaction</h3>\n        <p>Text</p>\n        <input type='text'/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}