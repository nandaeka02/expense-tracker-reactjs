{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nanda\\\\Documents\\\\Projekan\\\\Projek React\\\\belajarreact1\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport History from './components/History/History';\nimport AddTransaction from './components/AddTransaction/AddTransaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [getInputText, setInputText] = useState('');\n  let [getInputAmount, setInputAmount] = useState('');\n  let [getHistory, setHistory] = useState([{\n    balance: \"+1000\",\n    type: \"income\",\n    description: \"Uang Kas\"\n  }, {\n    balance: \"+1000\",\n    type: \"income\",\n    description: \"Dikasih Orang\"\n  }, {\n    balance: \"-1000\",\n    type: \"outcome\",\n    description: \"Jajan Boba\"\n  }]);\n\n  const addNewTransaction = event => {\n    if (!(getInputAmount === '' && getInputText === '')) {\n      let isIncome = \"income\";\n\n      if (parseInt(getInputAmount) < 0) {\n        isIncome = \"outcome\";\n      }\n\n      const newTransaction = {\n        balance: getInputAmount,\n        type: isIncome,\n        description: getInputText\n      }; // console.log(newTransaction)\n\n      setHistory(getHistory.concat(newTransaction));\n      setInputText('');\n      setInputAmount('');\n    }\n  };\n\n  const getOutcomeBalance = () => {\n    let outcomebalance = 0;\n    getHistory.forEach(history => {\n      if (history.type === \"outcome\") {\n        outcomebalance += parseInt(history.balance);\n      }\n    });\n    return outcomebalance;\n  };\n\n  const getIncomeBalance = () => {\n    let incomebalance = 0;\n    getHistory.forEach(history => {\n      if (history.type === \"income\") {\n        incomebalance += parseInt(history.balance);\n      }\n    });\n    return incomebalance;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"IDR \", getIncomeBalance() + getOutcomeBalance()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outincontainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"income\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"INCOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"green-accent\",\n          children: [\"IDR \", getIncomeBalance()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outcome\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"OUTCOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-accent\",\n          children: [\"IDR \", getOutcomeBalance()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      DataHistory: getHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransaction, {\n      DataText: getInputText,\n      DataAmount: getInputAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lW4ku1SpsF1VW8l1RI/tgEmKQHM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nanda/Documents/Projekan/Projek React/belajarreact1/src/App.js"],"names":["logo","useState","History","AddTransaction","App","getInputText","setInputText","getInputAmount","setInputAmount","getHistory","setHistory","balance","type","description","addNewTransaction","event","isIncome","parseInt","newTransaction","concat","getOutcomeBalance","outcomebalance","forEach","history","getIncomeBalance","incomebalance"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport History from './components/History/History';\nimport AddTransaction from './components/AddTransaction/AddTransaction';\n\nfunction App() {\n  let [getInputText, setInputText] = useState('')\n  let [getInputAmount, setInputAmount] = useState('')\n  let [getHistory, setHistory] = useState([\n    {balance: \"+1000\", type: \"income\",description: \"Uang Kas\"},\n    {balance: \"+1000\", type: \"income\",description: \"Dikasih Orang\"},\n    {balance: \"-1000\", type: \"outcome\",description: \"Jajan Boba\"}\n  ])\n  const addNewTransaction = (event) =>{\n    if(!(getInputAmount === '' && getInputText === '')){\n      let isIncome = \"income\"\n      if (parseInt(getInputAmount) < 0) {\n          isIncome = \"outcome\"\n      }\n      const newTransaction = {\n        balance: getInputAmount,\n        type: isIncome,\n        description: getInputText\n      }\n      // console.log(newTransaction)\n      setHistory(getHistory.concat(newTransaction))\n      setInputText('')\n      setInputAmount('')\n    }\n\n  }\n  \n  const getOutcomeBalance = () =>{\n    let outcomebalance = 0\n    getHistory.forEach((history) =>{\n        if(history.type === \"outcome\"){\n        outcomebalance += parseInt(history.balance)\n        }\n    }) \n    return outcomebalance\n  }\n  const getIncomeBalance = () =>{\n    let incomebalance = 0\n    getHistory.forEach((history) =>{\n        if(history.type === \"income\"){\n        incomebalance += parseInt(history.balance)\n        }\n    }) \n    return incomebalance\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Expense Tracker</h1>\n      <h3>Your Balance</h3>\n      <h2>IDR {getIncomeBalance() + getOutcomeBalance()}</h2>\n      <div className='outincontainer'>\n        <div className='income'>\n          <h4>INCOME</h4>\n          <span className='green-accent'>IDR {getIncomeBalance()}</span>\n        </div>\n        <div className='outcome'>\n          <h4>OUTCOME</h4>\n          <span className='red-accent'>IDR {getOutcomeBalance()}</span>\n        </div>\n      </div>\n      <History DataHistory={getHistory} />\n      {/* <div className='addnewtransaction'>\n        <h3>Add new transaction</h3>\n        <p>Text</p>\n        <input value={getInputText} onChange={handleInputText} type='text'/>\n        <p>Amount</p>\n        <p>(negative -expense, positif +expense)</p>\n        <input value={getInputAmount} onChange={handleInputAmount} type='text'/>\n        <button onClick={addNewTransaction}>Add Transaction</button>\n      </div> */}\n      <AddTransaction DataText={getInputText} DataAmount={getInputAmount} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}